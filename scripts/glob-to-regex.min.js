// Adjusted glob-to-regexp function for browser use
function globToRegex(pattern, options) {
    if (typeof pattern !== 'string') {
        throw new TypeError('Expected a string');
    }

    var str = String(pattern);
    var regexString = '';
    var isExtended = !!options && !!options.extended;
    var isGlobstar = !!options && !!options.globstar;
    var escapedChars = '/$^+.()=!|'.split('');
    var hasFlags = options && typeof options.flags === 'string';
    var flags = hasFlags ? options.flags : '';

    for (var i = 0; i < str.length; i++) {
        var char = str[i];

        if (escapedChars.includes(char)) {
            regexString += '\\' + char;
        } else {
            switch (char) {
                case '?':
                    if (isExtended) {
                        regexString += '.';
                    } else {
                        regexString += '\\?';
                    }
                    break;
                case '[':
                case ']':
                    if (isExtended) {
                        regexString += char;
                    } else {
                        regexString += '\\' + char;
                    }
                    break;
                case '{':
                    if (isExtended) {
                        regexString += '(';
                    } else {
                        regexString += '\\{';
                    }
                    break;
                case '}':
                    if (isExtended) {
                        regexString += ')';
                    } else {
                        regexString += '\\}';
                    }
                    break;
                case ',':
                    if (isExtended) {
                        regexString += '|';
                    } else {
                        regexString += '\\,';
                    }
                    break;
                case '*':
                    var prevChar = str[i - 1];
                    var nextChar = str[i + 1];

                    var starCount = 1;
                    while (str[i + 1] === '*') {
                        starCount++;
                        i++;
                    }

                    var isSurroundedBySlashes = (prevChar === '/' || prevChar === undefined) && (nextChar === '/' || nextChar === undefined);

                    if (isGlobstar && starCount > 1 && isSurroundedBySlashes) {
                        regexString += '((?:[^/]*(?:/|$))*)';
                        i++;
                    } else {
                        regexString += '.*';
                    }
                    break;
                default:
                    regexString += char;
                    break;
            }
        }
    }

    if (!flags.includes('g')) {
        regexString = '^' + regexString + '$';
    }

    return new RegExp(regexString, flags);
}
